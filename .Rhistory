library(dplyr)
library(ggplot2)
library(factoextra)
library(NbClust)
library(gridExtra)
# Tidydata
data <- read.csv("Data/Raw/Elecciones.csv", header = T, sep = "\t")
new_data <- cbind(data[, 1:2], data[,5:6],data[,9:10],data[,15:16],data[,21:24])
write.csv(new_data,"Data/Tidy/Elecciones_Parcial.csv")
data <- read.csv("Data/Tidy/Elecciones_Parcial.csv",header = T,)[,2:13]
head(data)
## Problema 1 Analisis de componentes principales
### Para los demócratas
demo <- data %>%
select(Estado,Cod,DEM12,DEM04,DEM92,DEM80,Tend,REG)
pca.demo <- princomp(demo[,3:6],cor = T)
names(pca.demo)
options(digits = 4)
summary(pca.demo)
prop_varianza <- pca.demo$sdev^2 / sum(pca.demo$sdev^2)
ggplot(data = data.frame(prop_varianza, pca.demo = 1:4),
aes(x = pca.demo, y = prop_varianza)) +
geom_col(width = 0.3)+
theme_bw()+labs(x = "Componente Princial",y = "Prop. de varianza explicada")
prop_varianza_acum <- cumsum(prop_varianza)
p <- ggplot(data = data.frame(prop_varianza, pc = 1:4),
aes(x = pc, y = prop_varianza_acum, group =1))
p + geom_point()+geom_line()+labs(x = "Componente principal",
y = "Prop. varianza explicada acumulada")+
geom_label(aes(label = round(prop_varianza_acum,2)))
biplot(pca.demo)
plot(pca.demo$scores[,1],pca.demo$scores[,2],pch=21,bg = demo$REG)
legend(3,-1,legend = levels(demo$REG), col = c("red","blue","green","black"),lty = 1:2,cex = 0.7)
eigen(cor(demo[,3:6]))$values
mean(eigen(cor(demo[,3:6]))$values)
par(mfrow=c(2,1), bg="azure")
barplot(loadings(pca.demo)[,1],col="blue2",sub="Primera componente")
barplot(loadings(pca.demo)[,2],col="orange",sub="Segunda componente")
setwd("C:/Users/Tus nalgas/Desktop/Analisis de datos/parcial 3")
library(dplyr)
library(ggplot2)
library(factoextra)
library(NbClust)
library(gridExtra)
# Tidydata
data <- read.csv("Data/Raw/Elecciones.csv", header = T, sep = "\t")
new_data <- cbind(data[, 1:2], data[,5:6],data[,9:10],data[,15:16],data[,21:24])
write.csv(new_data,"Data/Tidy/Elecciones_Parcial.csv")
data <- read.csv("Data/Tidy/Elecciones_Parcial.csv",header = T,)[,2:13]
head(data)
## Problema 1 Analisis de componentes principales
### Para los demócratas
demo <- data %>%
select(Estado,Cod,DEM12,DEM04,DEM92,DEM80,Tend,REG)
pca.demo <- princomp(demo[,3:6],cor = T)
names(pca.demo)
options(digits = 4)
summary(pca.demo)
prop_varianza <- pca.demo$sdev^2 / sum(pca.demo$sdev^2)
ggplot(data = data.frame(prop_varianza, pca.demo = 1:4),
aes(x = pca.demo, y = prop_varianza)) +
geom_col(width = 0.3)+
theme_bw()+labs(x = "Componente Princial",y = "Prop. de varianza explicada")
prop_varianza_acum <- cumsum(prop_varianza)
p <- ggplot(data = data.frame(prop_varianza, pc = 1:4),
aes(x = pc, y = prop_varianza_acum, group =1))
p + geom_point()+geom_line()+labs(x = "Componente principal",
y = "Prop. varianza explicada acumulada")+
geom_label(aes(label = round(prop_varianza_acum,2)))
biplot(pca.demo)
plot(pca.demo$scores[,1],pca.demo$scores[,2],pch=21,bg = demo$REG)
legend(3,-1,legend = levels(demo$REG), col = c("red","blue","green","black"),lty = 1:2,cex = 0.7)
eigen(cor(demo[,3:6]))$values
mean(eigen(cor(demo[,3:6]))$values)
par(mfrow=c(2,1), bg="azure")
barplot(loadings(pca.demo)[,1],col="blue2",sub="Primera componente")
barplot(loadings(pca.demo)[,2],col="orange",sub="Segunda componente")
pca.demo
summary(pca.demo)
pca.demo$scores
pca.demo$loadings
library(dplyr)
library(ggplot2)
library(factoextra)
library(NbClust)
library(gridExtra)
library(CCA)
data = read.csv("Data/Tidy/Elecciones_Parcial.csv")[,2:13]
data
# Calculamos las medis y las desviaciones por variables
demo <- data %>%
select(DEM12,DEM04,DEM92,DEM80)
gop <- data %>%
select(GOP12,GOP04,GOP92,GOP80)
correl <- matcor(demo,gop)
img.matcor(correl, type = 2)
cc1 <- cc(demo,gop)
barplot(cc1$cor, main = "Canonical correlations for 'cancor()'", col = "gray")
cc1$xcoef
plt.cc(cc1, var.label = TRUE, ind.names = data[,2])
data = read.csv("Data/Tidy/Elecciones_Parcial.csv")[,2:13]
data
# Calculamos las medis y las desviaciones por variables
demo <- data %>%
select(DEM12,DEM04,DEM92,DEM80)
gop <- data %>%
select(GOP12,GOP04,GOP92,GOP80)
correl <- matcor(demo,gop)
img.matcor(correl, type = 2)
knitr::opts_chunk$set(echo = TRUE)
datac <- datab %>%
select(REG,Y80,Y92,Y04,Y12)
library(dplyr)
library(ggplot2)
library(factoextra)
library(NbClust)
library(gridExtra)
library(CCA)
library(tidyverse)
votes = read.csv("Data/Tidy/Elecciones_Parcial.csv", header = TRUE)[,2:13]
attach(votes)
addyear12 <- function(demi,repi,dataa){
testi = repi - demi
dataa <- dataa %>%
mutate(Y12 = ifelse( testi >= 10 , "A",ifelse( testi < 10 & testi >2, "B",
(ifelse( testi < 2 & testi > -2, "C",
(ifelse(testi < -2 & testi > -10,"D",
(ifelse(testi < -10, "E",0))
)))))))
return(dataa)
}
addyear04 <- function(demi,repi,dataa){
testi = repi - demi
dataa <- dataa %>%
mutate(Y04 = ifelse( testi >= 10 , "A",ifelse( testi < 10 & testi >2, "B",
(ifelse( testi < 2 & testi > -2, "C",
(ifelse(testi < -2 & testi > -10,"D",
(ifelse(testi < -10, "E",0))
)))))))
return(dataa)
}
addyear92 <- function(demi,repi,dataa){
testi = repi - demi
dataa <- dataa %>%
mutate(Y92 = ifelse( testi >= 10 , "A",ifelse( testi < 10 & testi >2, "B",
(ifelse( testi < 2 & testi > -2, "C",
(ifelse(testi < -2 & testi > -10,"D",
(ifelse(testi < -10, "E",0))
)))))))
return(dataa)
}
addyear80 <- function(demi,repi,dataa){
testi = repi - demi
dataa <- dataa %>%
mutate(Y80 = ifelse( testi >= 10 , "A",ifelse( testi < 10 & testi >2, "B",
(ifelse( testi < 2 & testi > -2, "C",
(ifelse(testi < -2 & testi > -10,"D",
(ifelse(testi < -10, "E",0))
)))))))
return(dataa)
}
datab = addyear80(GOP80,DEM80,votes)
datab = addyear92(GOP92,DEM92,datab)
datab = addyear04(GOP04,DEM04,datab)
datab = addyear12(GOP12,DEM12,datab)
write.csv(datab,"Data/Tidy/problema4.csv")
head(datab)
datac <- datab %>%
select(REG,Y80,Y92,Y04,Y12)
datac
table <- datac %>%
gather(REG,Y80:Y12)
tablea <- as.table(as.matrix(xtabs(~REG+Y80,datac))+as.matrix(xtabs(~REG+Y92,datac))+as.matrix(xtabs(~REG+Y04,datac))+as.matrix(xtabs(~REG+Y12,datac)))
library(dplyr)
library(ggplot2)
library(factoextra)
library(NbClust)
library(gridExtra)
library(CCA)
library(tidyverse)
votes = read.csv("Data/Tidy/Elecciones_Parcial.csv", header = TRUE)[,2:13]
attach(votes)
addyear12 <- function(demi,repi,dataa){
testi = repi - demi
dataa <- dataa %>%
mutate(Y12 = ifelse( testi >= 10 , "A",ifelse( testi < 10 & testi >2, "B",
(ifelse( testi < 2 & testi > -2, "C",
(ifelse(testi < -2 & testi > -10,"D",
(ifelse(testi < -10, "E",0))
)))))))
return(dataa)
}
addyear04 <- function(demi,repi,dataa){
testi = repi - demi
dataa <- dataa %>%
mutate(Y04 = ifelse( testi >= 10 , "A",ifelse( testi < 10 & testi >2, "B",
(ifelse( testi < 2 & testi > -2, "C",
(ifelse(testi < -2 & testi > -10,"D",
(ifelse(testi < -10, "E",0))
)))))))
return(dataa)
}
addyear92 <- function(demi,repi,dataa){
testi = repi - demi
dataa <- dataa %>%
mutate(Y92 = ifelse( testi >= 10 , "A",ifelse( testi < 10 & testi >2, "B",
(ifelse( testi < 2 & testi > -2, "C",
(ifelse(testi < -2 & testi > -10,"D",
(ifelse(testi < -10, "E",0))
)))))))
return(dataa)
}
addyear80 <- function(demi,repi,dataa){
testi = repi - demi
dataa <- dataa %>%
mutate(Y80 = ifelse( testi >= 10 , "A",ifelse( testi < 10 & testi >2, "B",
(ifelse( testi < 2 & testi > -2, "C",
(ifelse(testi < -2 & testi > -10,"D",
(ifelse(testi < -10, "E",0))
)))))))
return(dataa)
}
datab = addyear80(GOP80,DEM80,votes)
datab = addyear92(GOP92,DEM92,datab)
datab = addyear04(GOP04,DEM04,datab)
datab = addyear12(GOP12,DEM12,datab)
write.csv(datab,"Data/Tidy/problema4.csv")
head(datab)
datac <- datab %>%
select(REG,Y80,Y92,Y04,Y12)
datac
tablea <- as.table(as.matrix(xtabs(~REG+Y80,datac))+as.matrix(xtabs(~REG+Y92,datac))+as.matrix(xtabs(~REG+Y04,datac))+as.matrix(xtabs(~REG+Y12,datac)))
tablea <- tablea / sum(tablea)
tablea
library(dplyr)
library(ggplot2)
library(factoextra)
library(NbClust)
library(gridExtra)
library(CCA)
library(tidyverse)
votes = read.csv("Data/Tidy/Elecciones_Parcial.csv", header = TRUE)[,2:13]
attach(votes)
addyear12 <- function(demi,repi,dataa){
testi = repi - demi
dataa <- dataa %>%
mutate(Y12 = ifelse( testi >= 10 , "A",ifelse( testi < 10 & testi >2, "B",
(ifelse( testi < 2 & testi > -2, "C",
(ifelse(testi < -2 & testi > -10,"D",
(ifelse(testi < -10, "E",0))
)))))))
return(dataa)
}
addyear04 <- function(demi,repi,dataa){
testi = repi - demi
dataa <- dataa %>%
mutate(Y04 = ifelse( testi >= 10 , "A",ifelse( testi < 10 & testi >2, "B",
(ifelse( testi < 2 & testi > -2, "C",
(ifelse(testi < -2 & testi > -10,"D",
(ifelse(testi < -10, "E",0))
)))))))
return(dataa)
}
addyear92 <- function(demi,repi,dataa){
testi = repi - demi
dataa <- dataa %>%
mutate(Y92 = ifelse( testi >= 10 , "A",ifelse( testi < 10 & testi >2, "B",
(ifelse( testi < 2 & testi > -2, "C",
(ifelse(testi < -2 & testi > -10,"D",
(ifelse(testi < -10, "E",0))
)))))))
return(dataa)
}
addyear80 <- function(demi,repi,dataa){
testi = repi - demi
dataa <- dataa %>%
mutate(Y80 = ifelse( testi >= 10 , "A",ifelse( testi < 10 & testi >2, "B",
(ifelse( testi < 2 & testi > -2, "C",
(ifelse(testi < -2 & testi > -10,"D",
(ifelse(testi < -10, "E",0))
)))))))
return(dataa)
}
datab = addyear80(GOP80,DEM80,votes)
datab = addyear92(GOP92,DEM92,datab)
datab = addyear04(GOP04,DEM04,datab)
datab = addyear12(GOP12,DEM12,datab)
write.csv(datab,"Data/Tidy/problema4.csv")
head(datab)
datac <- datab %>%
select(REG,Y80,Y92,Y04,Y12)
datac
gather(REG,Y80:Y12)
tablea <- as.table(as.matrix(xtabs(~REG+Y80,datac))+as.matrix(xtabs(~REG+Y92,datac))+as.matrix(xtabs(~REG+Y04,datac))+as.matrix(xtabs(~REG+Y12,datac)))
tablea <- tablea / sum(tablea)
tablea
tablea
library(dplyr)
library(ggplot2)
library(factoextra)
library(NbClust)
library(gridExtra)
library(CCA)
library(tidyverse)
library(psych)
library(corrplot)
library(corrr)
library(stats)
datis = read.csv("Data/Tidy/Elecciones_Parcial.csv")[,2:13]
head(datis)
usa <- datis %>%
select(DEM12,GOP12,DEM04,GOP04,DEM92,GOP92,DEM80,GOP80)
rownames(usa)<- datis$Cod
cor.usa <- cor(usa)
corrplot(cor.usa)
KMO(usa)
det(cor.usa)
bartlett.test(usa)
factanal(usa, factors = 3, rotations = "none")
provMap_r <- cmdscale(provMap_d,eig = TRUE,k = 2) #Calculamos dos dimensiones
datis = read.csv("Data/Tidy/Elecciones_Parcial.csv")[,2:13]
head(datis)
attach
final <- datis %>%
select(DEM12,GOP12,DEM04,GOP04,DEM92,GOP92,DEM80,GOP80)
rownames(final) = datis$Estado
head(final)
provMap <- scale(final) #Escalamos los datos para evitar problemas de dimensiones
provMap_d <- get_dist(provMap,method = "manhattan")#Calculamos la matriz de distancias
provMap_r <- cmdscale(provMap_d,eig = TRUE,k = 2) #Calculamos dos dimensiones
provMap_r$ #Variabilidad explicada
x <- provMap_r$points[,1]
y <- provMap_r$points[,2]
columnforlabels = dimnames(provMap_r[[1]])[[1]]
plot(x,y, type = 'n',xlab = 'Dimension 1', ylab = 'Dimension 2', main = 'Mapa de Similitudes entre Paises')
provMap_r <- cmdscale(provMap_d,eig = TRUE,k = 2) #Calculamos dos dimensiones
provMap_r$ #Variabilidad explicada
x <- provMap_r$points[,1]
y <- provMap_r$points[,2]
columnforlabels = dimnames(provMap_r[[1]])[[1]]
plot(x,y, type = 'n',xlab = 'Dimension 1', ylab = 'Dimension 2', main = 'Mapa de Similitudes entre Paises')
provMap_r <- cmdscale(provMap_d,eig = TRUE,k = 2) #Calculamos dos dimensiones
provMap_r$ #Variabilidad explicada
x <- provMap_r$points[,1]
y <- provMap_r$points[,2]
columnforlabels = dimnames(provMap_r[[1]])[[1]]
plot(x = x,y, type = 'n',xlab = 'Dimension 1', ylab = 'Dimension 2', main = 'Mapa de Similitudes entre Paises')
library(dplyr)
library(ggplot2)
library(factoextra)
library(NbClust)
library(gridExtra)
library(CCA)
library(tidyverse)
library(psych)
library(corrplot)
library(corrr)
library(stats)
datis = read.csv("Data/Tidy/Elecciones_Parcial.csv")[,2:13]
head(datis)
final <- datis %>%
select(DEM12,GOP12,DEM04,GOP04,DEM92,GOP92,DEM80,GOP80)
rownames(final) = datis$Estado
head(final)
provMap <- scale(final) #Escalamos los datos para evitar problemas de dimensiones
provMap_d <- get_dist(provMap)#Calculamos la matriz de distancias
fviz_dist(provMap_d, lab_size = 8, gradient = list(low = "white",mid=NULL, high ="red"))
## [1] 38 38
provMap_r <- cmdscale(provMap_d,eig = TRUE,k = 2) #Calculamos dos dimensiones
provMap_r$GOF
## [1] 0.6846313 0.6846313
x <- provMap_r$points[,1]
y <- provMap_r$points[,2]
columnforlabels = dimnames(provMap_r[[1]])[[1]]
plot(x,y, type = 'n',xlab = 'Dimension 1', ylab = 'Dimension 2', main = 'Mapa de Similitudes entre Paises')
columnforlabels = datis$Estado
colorforlabels = datis$REG
paleta = c("Magenta","Green","Red","Blue","Black")
text(x,y, labels = columnforlabels,cex = 0.8, col = paleta[colorforlabels])
legend('topright',legend = levels(colorforlabels),fill = paleta, title = 'Continente',cex = 0.4)
provMap_r <- cmdscale(provMap_d,eig = TRUE,k = 2) #Calculamos dos dimensiones
provMap_r$GOF #Variabilidad explicada
pointsx <- provMap_r$points[,1]
pointsy <- provMap_r$points[,2]
columnforlabels = dimnames(provMap_r[[1]])[[1]]
plot(pointsx,pointsy, type = 'n',xlab = 'Dimension 1', ylab = 'Dimension 2', main = 'Mapa de Similitudes entre Paises')
columnforlabels = datis$Estado
colorforlabels = datis$REG
paleta = c("Magenta","Green","Red","Blue","Black")
text(pointsx,pointsy, labels = columnforlabels,cex = 0.8, col = paleta[colorforlabels])
legend('topright',legend = levels(colorforlabels),fill = paleta, title = 'Continente',cex = 0.4)
setwd("C:/Users/Tus nalgas/Desktop/Analisis de datos/parcial 3")
